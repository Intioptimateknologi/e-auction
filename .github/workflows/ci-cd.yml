name: Django CI/CD

on:
  push:
    branches:
      - master  # Menjalankan CI/CD setiap kali ada push ke branch `main`
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kode dari repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Debugging Python & Pip
        run: |
          python --version
          pip --version
          pip list

      - name: Upgrade pip, setuptools, dan wheel
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install dependensi sistem
        run: sudo apt-get update && sudo apt-get install -y python3-dev libyaml-dev

      
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libpq-dev
        
      - name: Install dependencies
        run: |
          set -e
          python -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Jalankan migrations
        run: |
          source env/bin/activate
          python manage.py migrate

      - name: Jalankan unit test
        run: |
          source env/bin/activate
          python manage.py test

  deploy:
    needs: test  # Hanya dijalankan jika test berhasil
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kode dari repository
        uses: actions/checkout@v3

      - name: Deploy ke server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP <<EOF
            cd /home/ptipo/kominfo3/
            git pull origin main
            source env/bin/activate
            pip install -r requirements.txt
            python manage.py migrate
            python manage.py collectstatic --noinput
            sudo systemctl restart gunicorn
            sudo systemctl restart nginx
          EOF

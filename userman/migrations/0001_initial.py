# Generated by Django 4.2 on 2023-05-07 05:59

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('isactive', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=100, verbose_name='Email')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('username', models.TextField(max_length=100, unique=True, verbose_name='Nama user')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('password', models.TextField(blank=True, max_length=100, verbose_name='Password')),
                ('mobile_number', models.TextField(max_length=100, verbose_name='No HP user')),
                ('nama_lengkap', models.TextField(max_length=100, verbose_name='Nama lengkap')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='bidder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified_by', models.IntegerField(blank=True)),
                ('nik', models.CharField(max_length=30, verbose_name='NIK perwakilan Perusahaan')),
                ('alamat_perusahaan', models.CharField(max_length=30, verbose_name='Alamat Perusahaan')),
                ('jenis_penyelenggara', models.CharField(default='AA', max_length=30, verbose_name='Jenis Pengelenggara')),
                ('verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True)),
                ('jabatan_di_perusahaan', models.CharField(max_length=30, verbose_name='Jabatan perwakilan di Perusahaan')),
                ('telp_perusahaan', models.CharField(max_length=30, verbose_name='Telp Perusahaan')),
                ('nama_perusahaan', models.CharField(max_length=30, verbose_name='Nama Perusahaan')),
                ('tgl_lahir', models.DateField(verbose_name='Tgl Lahir Perwakilan Perusahaan')),
                ('verification_note', models.TextField(blank=True, max_length=2000)),
                ('npwp_perusahaan', models.CharField(max_length=30, verbose_name='NPWP Perusahaan')),
                ('email_perusahaan', models.CharField(max_length=30, verbose_name='Email Perusahaan')),
                ('nib_perusahaan', models.CharField(max_length=30, verbose_name='NIB Perusahaan')),
                ('users', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='tim_lelang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sk_pengangkatan', models.FileField(upload_to='uploads/timlelang/', verbose_name='File SK Pengangkatan')),
                ('nip', models.CharField(max_length=30, verbose_name='NIP Anggota TIM')),
                ('jabatan_dalam_tim', models.CharField(max_length=30, verbose_name='Jabtan dalam Tim')),
                ('jabatan', models.CharField(max_length=30, verbose_name='Jabatan di UnOr yang menugaskan')),
                ('users', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='dokumen_perusahaan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified_by', models.IntegerField(blank=True)),
                ('dokumen', models.FileField(upload_to='upload/bidder/')),
                ('nama_dokumen', models.CharField(max_length=30, verbose_name='Nama Dokumen Perusahaan')),
                ('verification_note', models.TextField(max_length=100)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('verified_at', models.DateTimeField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('verified', models.BooleanField(default=False)),
                ('id_perusahaan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userman.bidder')),
            ],
        ),
    ]
